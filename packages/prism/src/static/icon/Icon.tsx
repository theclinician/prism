import { Component, JSX, createEffect, createSignal } from "solid-js";
import { Dynamic } from "solid-js/web";
import style from "./Icon.module.scss";
import useProps from "$/utils/useProps";


export enum I {
  "eye-open" = "eye-open",
  "eye-closed" = "eye-closed",
  "lock" = "lock",
  "unlock" = "unlock",
  "user" = "user",
}

const EyeOpen = () => {
  return <g>
    <path
      d="M 219.70228,415.23696 C 143.12746,408.4399 69.984722,360.49715 18.357435,283.26176 6.831466,266.01869 2.351243,256.94435 0.74806194,247.59528 -1.86686,232.34623 1.992639,221.19399 18.357435,196.71193 64.236636,128.07581 127.58284,82.024191 194.74268,68.482871 274.8678,52.327355 353.6979,78.684121 418.21407,143.20028 c 24.91149,24.91148 51.70136,61.30342 59.29559,80.54835 3.32084,8.41549 3.32084,24.06095 0,32.47644 -7.59423,19.24493 -34.3841,55.63686 -59.29559,80.54835 -57.64774,57.64774 -126.48632,84.85679 -198.51179,78.46354 z m 46.85488,-32.8948 c 46.03517,-6.03469 87.80667,-27.52218 126.15092,-64.89278 16.11052,-15.70143 28.40431,-30.38874 40.68905,-48.61096 19.27908,-28.5971 19.27908,-29.10604 0,-57.70313 -27.38816,-40.62547 -63.17552,-73.51375 -100.88651,-92.71383 -29.80717,-15.17595 -59.61199,-22.413489 -92.30093,-22.413489 -47.49414,0 -92.18555,16.338689 -132.61211,48.481529 -20.656828,16.42407 -45.726105,44.11555 -61.463438,67.89238 -18.280029,27.61848 -18.273501,28.03366 0.888133,56.45654 22.882801,33.94258 53.782265,64.4783 84.567245,83.57176 25.15297,15.60036 53.89815,26.15004 81.53915,29.92539 14.23427,1.9442 38.62458,1.94722 53.42849,0.007 z m -47.32132,-31.45249 c -43.77338,-8.69761 -77.7319,-41.18273 -88.6406,-84.79467 -3.53272,-14.12348 -3.27364,-38.90346 0.55728,-53.30054 5.42191,-20.37626 15.1323,-37.23034 29.9018,-51.8998 19.05588,-18.92682 42.1714,-29.84594 68.40948,-32.31473 55.3947,-5.21222 105.3518,29.90468 119.80309,84.21453 2.37987,8.94388 2.78152,12.78009 2.84704,27.19239 0.0648,14.25081 -0.30406,18.23683 -2.44753,26.44985 -6.69445,25.65068 -21.00164,47.83186 -40.39509,62.62659 -14.74223,11.24642 -30.8592,18.47521 -48.76423,21.87174 -10.53922,1.99927 -31.09483,1.97667 -41.27124,-0.0453 z m 42.49295,-32.9956 c 25.68328,-7.11719 45.88354,-26.38906 54.9949,-52.46734 2.79975,-8.01335 3.02398,-9.87358 3.00134,-24.89861 -0.0222,-14.71942 -0.29677,-17.04825 -2.93557,-24.8986 -3.85892,-11.48011 -9.57508,-21.00947 -17.99289,-29.9958 -11.92027,-12.72534 -25.82222,-20.57178 -42.5813,-24.03347 -39.68947,-8.19808 -79.47191,15.01744 -92.58532,54.02927 -2.63882,7.85035 -2.91339,10.17918 -2.93558,24.8986 -0.0226,15.02503 0.20159,16.88526 3.00133,24.89861 10.32393,29.54885 34.3044,49.69749 65.14724,54.73741 8.0339,1.3128 23.91186,0.21675 32.88585,-2.27007 z"
    />
  </g>;
};

const EyeClosed = () => {
  return <g>
    <path
      d="m 72.286888,413.88928 c -5.39482,-2.81547 -9.103441,-10.47316 -8.060836,-16.6443 0.683924,-4.04813 2.463971,-6.32148 14.675476,-18.74264 L 92.798684,364.36663 82.097532,355.42168 C 56.703913,334.19566 30.990141,304.20024 11.967418,273.61419 3.948849,260.72133 1.0245581,253.26551 0.21388871,243.64717 -1.0073169,229.15791 2.6766154,219.89515 19.721798,194.59733 58.695083,136.75465 111.48911,94.398429 168.05662,75.589663 192.30001,67.528728 213.2837,64.222 240.19318,64.222 c 37.36015,0 69.84878,7.692471 104.06583,24.640149 l 16.16818,8.008121 15.25588,-15.125723 c 8.39073,-8.31911 16.31935,-15.664954 17.61914,-16.324104 1.29979,-0.65915 4.51422,-1.198443 7.14318,-1.198443 6.52306,0 11.49365,3.502093 14.18391,9.993361 C 418.97669,84.7052 431.79621,70.793807 252.09489,250.59346 163.0285,339.70857 88.621776,413.349 86.746622,414.23885 c -4.56949,2.1684 -9.880926,2.04001 -14.459734,-0.34963 z m 60.323072,-89.174 c 9.08186,-9.0677 16.51248,-16.89174 16.51248,-17.38681 0,-0.495 -1.50972,-3.09437 -3.35494,-5.7763 -5.4529,-7.92549 -11.75278,-22.45592 -14.59649,-33.66619 -15.09995,-59.5257 20.30415,-119.70319 80.16373,-136.25688 9.79981,-2.71009 12.50206,-2.99206 28.67175,-2.99206 16.10463,0 18.88843,0.28768 28.4375,2.93992 12.13884,3.37144 23.9169,8.55471 32.72695,14.40247 l 6.10941,4.05525 14.73466,-14.73469 14.73465,-14.73462 -11.32956,-5.41201 C 273.99943,90.590254 213.92198,89.486396 161.11014,112.13438 113.59619,132.51035 70.280628,171.93236 38.999078,223.26911 c -6.667587,10.94228 -6.90684,11.58253 -6.499236,17.39134 0.361471,5.15187 1.436911,7.67499 7.378421,17.31124 12.061806,19.56256 25.477562,36.3345 43.741686,54.68445 14.654505,14.7234 29.948241,28.37042 31.949251,28.50923 0.29056,0.0184 7.9589,-7.3824 17.04076,-16.45009 z m 95.7616,-95.76194 c 30.20218,-30.19784 54.91305,-55.25159 54.91305,-55.67496 0,-1.42539 -9.36379,-6.27259 -17.39284,-9.00347 -42.09493,-14.31739 -87.45639,8.23079 -102.35724,50.87953 -2.78816,7.98021 -3.02521,9.92203 -3.03786,24.88495 -0.0123,14.25269 0.29897,17.1517 2.55367,23.80294 2.65018,7.81791 8.59288,20.01616 9.75137,20.01616 0.36123,0 25.36767,-24.70731 55.56985,-54.90515 z M 211.33474,414.2878 c -13.83958,-1.88458 -33.98165,-6.42435 -38.93744,-8.77603 -10.12439,-4.80432 -12.07152,-17.97553 -3.82529,-25.87595 4.31252,-4.13167 10.94614,-4.67575 22.20562,-1.82134 28.32975,7.18201 60.30002,7.99083 88.72015,2.24465 58.76218,-11.88108 114.96734,-52.83717 154.44436,-112.54192 15.4246,-23.3281 16.59166,-27.68944 10.35761,-38.70661 -8.64714,-15.28183 -24.13604,-36.53213 -37.16082,-50.9835 -9.40943,-10.44009 -11.32311,-13.64009 -11.32311,-18.9342 0,-11.34533 12.68611,-19.25047 22.63591,-14.10522 11.1911,5.78715 51.68569,59.9693 58.56849,78.36519 5.32783,14.23993 3.52751,28.7433 -5.53336,44.57694 -18.01646,31.4832 -50.41333,69.19562 -78.92499,91.87458 -34.36903,27.33808 -72.18006,45.19407 -111.36868,52.59291 -18.27431,3.45026 -52.37853,4.47082 -69.85845,2.0905 z m 17.57148,-62.65614 c -2.23717,-0.83937 -4.82538,-2.15503 -5.75159,-2.92373 -4.9796,-4.13266 -6.31188,-14.18877 -2.6709,-20.16013 3.75796,-6.16322 6.54607,-7.19452 21.68378,-8.02082 23.67702,-1.29235 38.01273,-7.64468 54.74061,-24.25616 7.96547,-7.91004 10.69904,-11.51187 14.36997,-18.93445 6.13241,-12.39963 7.68531,-18.64113 8.68894,-34.92328 0.91442,-14.83491 1.72193,-17.02435 8.01073,-21.71961 3.97305,-2.96629 12.67206,-2.96629 16.6451,0 6.8019,5.07839 7.38026,6.87728 7.20648,22.41489 -0.1274,11.3911 -0.70813,16.34447 -2.90093,24.74351 -11.09088,42.48123 -44.78241,74.2667 -87.94263,82.96722 -10.17404,2.05099 -27.60219,2.49239 -32.07956,0.81256 z"
    />
  </g>
};


const components = {
  [I["eye-open"]]: EyeOpen,
  [I["eye-closed"]] : EyeClosed,
  [I["lock"]] : EyeClosed,
  [I["unlock"]] : EyeClosed,
  [I["user"]] : EyeClosed,
}

export enum IconSize {
  TINY = "TINY",
  SMALL = "SMALL",
  MEDIUM = "MEDIUM",
}

type Props = {
  icon?: I,
  custom?: null | Component,
  size?: IconSize,
}

const defaultProps: Required<Props> = {
  icon: I["eye-open"],
  custom: null,
  size: IconSize.MEDIUM,
}

export const Icon = (allProps: Props & JSX.IntrinsicElements['div']) => {
  const [props, other] = useProps(allProps, defaultProps);

  return (
    <span
      classList={{
        [style.icon]: true,
        [style.tiny]: props.size === IconSize.TINY,
        [style.small]: props.size === IconSize.SMALL,
        [style.medium]: props.size === IconSize.MEDIUM,
      }}
      {...other}
    >
      <svg viewBox="0 0 480 480">
        <Dynamic component={props.custom ?? components[props.icon]} />
      </svg>
    </span>
  );
}

export default Icon;
